import nextcord
from nextcord import Interaction
from nextcord.ext import commands
from config import *
import time
from nextcord.ui import Button, View
import random
import json
bd = {} #–õ–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ —á–∞—Ç–∞ –õ–°

intents = nextcord.Intents.default()
intents.members = True

client = commands.Bot(command_prefix= "/", intents = intents)


def update_db():
    global bd
    try:
        with open('DB.txt', 'r', encoding='utf-8') as file:  # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
            d1 = json.load(file)
            bd.update(d1)  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    except json.decoder.JSONDecodeError:
        pass


def write_db():
    global bd
    open('DB.txt', 'w').close()
    with open('DB.txt', 'w', encoding='utf-8') as file:  # –í—ã–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ txt —Ñ–∞–π–ª
        json.dump(bd, file, indent=3, ensure_ascii=False)

@client.event
async def on_ready():
    links = ["https://i.gifer.com/2GU.gif","https://i.gifer.com/HIhn.gif","https://i.gifer.com/Fdfb.gif","https://i.gifer.com/2oT.gif","https://i.gifer.com/C6Gq.gif","https://i.gifer.com/6YZS.gif","https://i.gifer.com/3DIi.gif","https://i.gifer.com/11tY.gif"]
    embed = nextcord.Embed(colour= nextcord.Color.random())
    update_db()
    if (bd["—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –ø—Ä–æ—à–ª—É—é –Ω–µ–¥–µ–ª—é"] > bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é']):
        result = f"üìâ| –í —ç—Ç–æ—Ç —Ä–∞–∑ –º—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ –º–µ–Ω—å—à–µ –Ω–∞ {bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –ø—Ä–æ—à–ª—É—é –Ω–µ–¥–µ–ª—é'] - bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é']}"
    elif (bd["—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –ø—Ä–æ—à–ª—É—é –Ω–µ–¥–µ–ª—é"] < bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é']):
        result = f"üìà| –í —ç—Ç–æ—Ç —Ä–∞–∑ –º—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ –±–æ–ª—å—à–µ –Ω–∞ {bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é'] - bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –ø—Ä–æ—à–ª—É—é –Ω–µ–¥–µ–ª—é']}"
    else:
        result = f"üçÄ| –í —ç—Ç–æ—Ç —Ä–∞–∑ –º—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é']} –ø—Ä–∏–±—ã–ª—å —Å—Ç–∞–±–∏–ª—å–Ω–∞."

    update_db()
    embed.add_field(name=f"‚è∞ {time.strftime('%A, %d %B %y %H:%M:%S')}",value=f"üìÜ –ù–æ–≤–∞—è –Ω–µ–¥–µ–ª—è, –Ω–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å! –ó–∞ —Ä–∞–±–æ—Ç—É –±—Ä–∞—Ç—å—è\n\nüí∞ –ó–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é –±—ã–ª–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: {bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é']}\n\n{result}")
    embed.set_thumbnail(links[random.randint(0, 7)])
    embed.set_footer(text="–° –ª—é–±–æ–≤—å—é –æ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ —Å–µ–º—å–∏ Grossi")
    print(f'///////////////////////////////////////////\n  [{time.strftime("%H:%M:%S")}][–ò–Ω—Ñ–æ] –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω\n///////////////////////////////////////////')
    channel = client.get_channel(chanelTime)
    print(time.strftime("%A"),time.strftime("%H:%M"))

    if (time.strftime("%A") == "Monday"):
        update_db()
        bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –ø—Ä–æ—à–ª—É—é –Ω–µ–¥–µ–ª—é'] = bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é']
        bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é'] = 0
        write_db()
        await channel.send(embed=embed)

@client.slash_command(name="ping",description="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞" ,guild_ids=[id])
async def ping(interaction: Interaction):
    await interaction.response.send_message("```üòú –Ø –∑–¥–µ—Å—å, –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç```")

class DropDown(nextcord.ui.Select):
    def __init__(self):
        SelectOptions = [
            nextcord.SelectOption(label="–Ω–∞ –º–æ–Ω–µ—Ç—ã", description="–û–ø–æ–≤–µ—Å—Ç–∏—Ç—å –≤—Å–µ—Ö –æ –≤–∑—è—Ç–∏–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –Ω–∞ –º–æ–Ω–µ—Ç—ã",emoji="ü™ô"),
            nextcord.SelectOption(label="–Ω–∞ —É—Ä–æ–∂–∞–π", description="–û–ø–æ–≤–µ—Å—Ç–∏—Ç—å –≤—Å–µ—Ö –æ –≤–∑—è—Ç–∏–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –Ω–∞ —É—Ä–æ–∂–∞–π",emoji="üçá"),
            nextcord.SelectOption(label="–Ω–∞ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–æ–≤", description="–û–ø–æ–≤–µ—Å—Ç–∏—Ç—å –≤—Å–µ—Ö –æ –≤–∑—è—Ç–∏–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –Ω–∞ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–æ–≤", emoji="üè™"),
            nextcord.SelectOption(label="–Ω–∞ —Ä—ã–±—É", description="–û–ø–æ–≤–µ—Å—Ç–∏—Ç—å –≤—Å–µ—Ö –æ –≤–∑—è—Ç–∏–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –Ω–∞ —Ä—ã–±—É",emoji="üé£"),
        ]
        super().__init__(placeholder="üìÑ –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤", min_values=1,max_values=1,options=SelectOptions)

    async def callback(self, ctx):
        await ctx.message.delete()
        CloseContract = Button(label="–ö–æ–Ω—Ç—Ä–∞–∫—Ç –∑–∞–≤–µ—Ä—à–µ–Ω", emoji="‚úÖ", style= nextcord.ButtonStyle.secondary)
        channel = client.get_channel(idChatContract)
        async def CloseContractCallBack(interactions):
            print(f"–°–µ–ª–µ–∫—Ç–æ—Ä –≤—ã–±–æ—Ä–∞: {self.values[0]}")
            update_db()
            if self.values[0] == "–Ω–∞ –º–æ–Ω–µ—Ç—ã":
                bd["—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é"] += 300000
                await channel.send(f"----------------<@&{notification}>-----------------------\n             üîí –ö–æ–Ω—Ç—Ä–∞–∫—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω\n-----------------------+300.000$------------------------------")
                await interactions.response.send_message(f"----------------<@&{notification}>-----------------------\n             üîí –ö–æ–Ω—Ç—Ä–∞–∫—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω\n-----------------------+300.000$------------------------------")
            elif self.values[0] == "–Ω–∞ —É—Ä–æ–∂–∞–π":
                bd["—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é"] += 300000
                await channel.send(f"----------------<@&{notification}>-----------------------\n             üîí –ö–æ–Ω—Ç—Ä–∞–∫—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω\n-----------------------+300.000$------------------------------")
                await interactions.response.send_message(f"----------------<@&{notification}>-----------------------\n             üîí –ö–æ–Ω—Ç—Ä–∞–∫—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω\n-----------------------+300.000$------------------------------")
            elif self.values[0] == "–Ω–∞ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–æ–≤":
                bd["—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é"] += 1700000
                await channel.send(f"----------------<@&{notification}>-----------------------\n             üîí –ö–æ–Ω—Ç—Ä–∞–∫—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω\n---------------------+1.700.000$------------------------------")
                await interactions.response.send_message(f"----------------<@&{notification}>-----------------------\n             üîí –ö–æ–Ω—Ç—Ä–∞–∫—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω\n---------------------+1.700.000$------------------------------")
            elif self.values[0] == "–Ω–∞ —Ä—ã–±—É":
                bd["—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é"] += 2500000
                await channel.send(f"----------------<@&{notification}>-----------------------\n             üîí –ö–æ–Ω—Ç—Ä–∞–∫—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω\n---------------------+2.500.000$------------------------------")
                await interactions.response.send_message(f"----------------<@&{notification}>-----------------------\n             üîí –ö–æ–Ω—Ç—Ä–∞–∫—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω\n---------------------+2.500.000$------------------------------")
            write_db()

        CloseContract.callback = CloseContractCallBack
        myview = View(timeout=None)
        myview.add_item(CloseContract)
        await ctx.send(f'<@&{notification}> | –í–Ω–∏–º–∞–Ω–∏–µ –±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∫–æ–Ω—Ç—Ä–∞–∫—Ç  {self.values[0]} | –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª: {ctx.user.mention}\n*‚òÅ –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ*',view = myview)
        await channel.send(f'<@&{notification}> | –í–Ω–∏–º–∞–Ω–∏–µ –±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∫–æ–Ω—Ç—Ä–∞–∫—Ç  {self.values[0]} | –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª: {ctx.user.mention}\n*‚åö –£ –≤–∞—Å –µ—Å—Ç—å 12 —á–∞—Å–æ–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞, –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –±—ã—Å—Ç—Ä–µ–µ üòâ*')


class DropDownView(nextcord.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(DropDown())

@client.slash_command(name="contract",description="–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –≤–∑—è—Ç–∏–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞" ,guild_ids=[id])
async def contract(interaction: Interaction):
    view = DropDownView()
    await interaction.response.send_message("üìÑ –ö–∞–∫–æ–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω?",view=view)

@client.slash_command(name="clear",description="–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤",default_member_permissions=8,guild_ids=[id],)
async def clear(ctx, amount: int):
    await ctx.channel.purge(limit = amount+2)
    await ctx.response.send_message(f"üóëÔ∏è( –£–¥–∞–ª–µ–Ω–æ {amount} —Å–æ–æ–±—â–µ–Ω–∏–π | –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª: {ctx.user.mention}")


class FormAcess(nextcord.ui.Modal):

    def __init__(self):
        super().__init__("–§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä",)

        self.emNickName = nextcord.ui.TextInput(label= "–í–∞—à –Ω–∏–∫",min_length=5,max_length=30,required=True,placeholder= "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–∏–∫")
        self.add_item(self.emNickName)

        self.emCID = nextcord.ui.TextInput(label="–í–∞—à CID",min_length=2,max_length=10,required=True,placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à CID –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
        self.add_item(self.emCID)

        self.emAccount = nextcord.ui.TextInput(label="–í–∞—à –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç",min_length=3,max_length=25,required=True,placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç")
        self.add_item(self.emAccount)

        self.emRealName = nextcord.ui.TextInput(label="–í–∞—à–µ —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è",min_length=3,max_length=25,required=True,placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å üòâ")
        self.add_item(self.emRealName)

        self.emScreen = nextcord.ui.TextInput(label="–°–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",min_length=5,max_length=400,required=True,placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ igmur –∏–ª–∏ yapix")
        self.add_item(self.emScreen)

    async def callback(self, interaction: Interaction) -> None:
        try:
            Nickname = self.emNickName.value
            CID = self.emCID.value
            Account = self.emAccount.value
            RealName = self.emRealName.value
            screen = self.emScreen.value
            if ((screen[-3:] != "png") and (screen[-3:] != "peg") and (screen[-3:] != "jpg")):
                raise IOError("Not image URL: –°—Å—ã–ª–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–∞—Ä—Ç–∏–Ω–∫–æ–π")
            em = nextcord.Embed(title=f"**ü´Ç–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫: {RealName}**",description=f"**üóíÔ∏è –ù–∏–∫: {Nickname}\n\nüî¢ CID: {CID}\n\nüí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç: {Account}\n\nüñºÔ∏è –°–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {screen}**",colour=nextcord.Color.random())
            em.set_thumbnail(screen)
            userid = interaction.user
            await userid.edit(nick=f"{RealName} ({Nickname})")
            if ((Nickname.lower()).find("grossi")) != -1:
                setRole = nextcord.utils.get(userid.guild.roles,id = GrossiRole)
            else:
                setRole = nextcord.utils.get(userid.guild.roles, id=OtherRole)
            RoleEvent = nextcord.utils.get(userid.guild.roles,id = notification)
            await userid.add_roles(RoleEvent)
            await userid.add_roles(setRole)
            return await interaction.response.send_message(embed = em)
        except:
            return await interaction.response.send_message(
                "```‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–ü—Ä–∞–≤–æ–π –∫–ª–∞–≤–∏—à–µ–π –º—ã—à–∫–∏ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)``` https://i.imgur.com/FiXzx1a.png)",ephemeral=True)

@client.slash_command(name="reg",description="–ó–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä",guild_ids=[id])
@commands.has_permissions(change_nickname=True)
async def reg(interaction:Interaction):
    await interaction.response.send_modal(FormAcess())

@client.slash_command(name="ping",description="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞" ,guild_ids=[id])
async def ping(interaction: Interaction):
    await interaction.response.send_message(f"```[PING: {round(client.latency * 1000)}ms] üòú –Ø –∑–¥–µ—Å—å, –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç```")

@client.slash_command(name="clearallrole",description="–û–±–Ω—É–ª—è–µ—Ç –≤—Å–µ–º —Ä–æ–ª–∏",default_member_permissions=8,guild_ids=[id])
async def clearallrole(interaction):
  for member in interaction.guild.members:
    if member.id == interaction.guild.me.id:
      continue

    to_replace = [role for role in member.roles if (role.is_integration() or role.is_default() or role.is_bot_managed())]
    try:
      await member.edit(roles=to_replace)
      print(f"Removed all roles from {member} ({member.id})")
    except Exception as err:
      print(f"{err}\nFailed to remove all roles from {member} ({member.id})")


class FormInvite(nextcord.ui.Modal):

    def __init__(self):
        super().__init__("–§–æ—Ä–º–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞",)

        self.emNickName = nextcord.ui.TextInput(label= "–í–∞—à –Ω–∏–∫",min_length=5,max_length=30,required=True,placeholder= "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–∏–∫")
        self.add_item(self.emNickName)

        self.emAddUser = nextcord.ui.TextInput(label="–ù–∏–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ",min_length=3,max_length=25,required=True,placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ")
        self.add_item(self.emAddUser)

        self.emUrl = nextcord.ui.TextInput(label="–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ä–º—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ (–æ—Ç –±–æ—Ç–∞ /reg)",min_length=5,max_length=400,required=True,placeholder="–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É —Ñ–æ—Ä–º—ã –æ—Ç –±–æ—Ç–∞")
        self.add_item(self.emUrl)

    async def callback(self, interaction: Interaction) -> None:
        Nickname = self.emNickName.value
        user = self.emAddUser.value
        url = self.emUrl.value
        em = nextcord.Embed(title=f"**ü´Ç{Nickname} –ø—Ä–∏–≥–ª–∞—Å–∏–ª –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞**",description=f"**üóíÔ∏è –ù–∏–∫ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞: {user}\n\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ä–º—É –æ—Ç –±–æ—Ç–∞ (/reg){url}**",colour=nextcord.Color.random())
        em.set_thumbnail("https://cdn-icons-png.flaticon.com/512/1177/1177443.png")
        return await interaction.response.send_message(embed = em)

@client.slash_command(name="inv",description="–§–æ—Ä–º–∞ –æ –ø—Ä–∏–≥–ª–∞—à–æ–Ω–Ω–æ–º –Ω–æ–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–µ",guild_ids=[id])
async def inv(interaction:Interaction):
    await interaction.response.send_modal(FormInvite())


class FormQuest(nextcord.ui.Modal):

    def __init__(self):
        super().__init__("–§–æ—Ä–º–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ –µ–∂–µ–¥–Ω–µ–≤–∫–∞–º",)

        self.emNick = nextcord.ui.TextInput(label= "–í–∞—à –Ω–∏–∫",min_length=5,max_length=25,required=True,placeholder= "–í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞ —Å–≤–æ–π –Ω–∏–∫")
        self.add_item(self.emNick)

        self.emSecret = nextcord.ui.TextInput(label= "–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ—Å—Å—ã–ª–∫–∞",min_length=2,max_length=10,required=True,placeholder= "–í—ã–ø–æ–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ—Ç")
        self.add_item(self.emSecret)

        self.emCrime = nextcord.ui.TextInput(label="–ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π –≥—Ä—É–∑",min_length=2,max_length=10,required=True,placeholder="–í—ã–ø–æ–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ—Ç")
        self.add_item(self.emCrime)


    async def callback(self, interaction: Interaction) -> None:
        Nick = self.emNick.value
        Secret = self.emSecret.value
        Crime = self.emCrime.value
        em = nextcord.Embed(title=f"**‚òë {Nick} –æ—Ç–ø—Ä–∞–≤–∏–ª –æ—Ç—á–µ—Ç –æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ**",description=f"**üì¶ –°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ—Å—Å—ã–ª–∫–∞: {Secret}\n\nüöö –ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π –≥—Ä—É–∑: {Crime}**",colour=nextcord.Color.random())
        em.set_thumbnail("https://cdn-icons.flaticon.com/png/512/5545/premium/5545099.png?token=exp=1655654681~hmac=0dcc157bd4e3e75392db9c4346eea6dd")
        return await interaction.response.send_message(embed = em)

@client.slash_command(name="quest",description="–û—Ç—á–µ—Ç –æ –µ–∂–µ–¥–Ω–µ–≤–∫–∞—Ö",guild_ids=[id])
async def quest(interaction:Interaction):
    await interaction.response.send_modal(FormQuest())


class FormAFK(nextcord.ui.Modal):

    def __init__(self):
        super().__init__("–§–æ—Ä–º–∞ –æ—Ç—á–µ—Ç–∞ –æ –Ω–µ–∞–∫—Ç–∏–≤–µ",)

        self.emNick = nextcord.ui.TextInput(label= "–í–∞—à –Ω–∏–∫",min_length=5,max_length=30,required=True,placeholder= "–í–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ —Å–≤–æ–π –Ω–∏–∫")
        self.add_item(self.emNick)

        self.emReason = nextcord.ui.TextInput(label="–ü—Ä–∏—á–∏–Ω–∞",min_length=5,max_length=30,required=True,placeholder="–í–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –ø—Ä–∏—á–∏–Ω—É")
        self.add_item(self.emReason)

        self.emTime = nextcord.ui.TextInput(label="–í—Ä–µ–º—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è",min_length=5,max_length=30,required=True,placeholder="–ü—Ä–∏–º–µ—Ä: 01.01.2001 - 02.02.2002")
        self.add_item(self.emTime)

    async def callback(self, interaction: Interaction) -> None:
        Nick = self.emNick.value
        Reason = self.emReason.value
        time = self.emTime.value
        em = nextcord.Embed(title=f"**üí§ {Nick} –∑–∞–ø–æ–ª–Ω–∏–ª –∑–∞—è–≤–∫—É –Ω–∞ –Ω–µ–∞–∫—Ç–∏–≤**",description=f"**üìÑ –ù–∏–∫: {Nick}\n\nüõå –ü—Ä–∏—á–∏–Ω–∞: {Reason}\n\nüóìÔ∏è –î–∞—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è:{time}**",colour=nextcord.Color.random())
        em.set_thumbnail("https://cdn-icons-png.flaticon.com/512/852/852534.png")
        return await interaction.response.send_message(embed = em)

@client.slash_command(name="afk",description="–ó–∞—è–≤–∫–∞ –Ω–∞ –Ω–µ–∞–∫—Ç–∏–≤",guild_ids=[id])
async def afk(interaction:Interaction):
    await interaction.response.send_modal(FormAFK())

@client.slash_command(name="checkdb",description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –ë–î",default_member_permissions=8,guild_ids=[id],)
async def checkdb(ctx):
    update_db()
    await ctx.response.send_message(f"```‚ô®Ô∏è–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:\nC—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é: {bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é']}\nC—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –ø—Ä–æ—à–ª—É—é –Ω–µ–¥–µ–ª—é: {bd['—Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∑–∞ –ø—Ä–æ—à–ª—É—é –Ω–µ–¥–µ–ª—é']}\n----------------------------------------```")

print("UPDATE –ü–†–û–®–ï–õ –£–°–ü–ï–®–ù–û| V 22.06.2022")
client.run(token)